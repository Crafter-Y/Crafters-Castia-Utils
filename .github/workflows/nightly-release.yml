name: Nightly Release

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build JAR with nightlyJar task
        run: ./gradlew nightlyJar

      - name: Find the generated JAR file
        id: find_jar
        run: |
          # Find the file in build/libs that matches the commit hash
          JAR_FILE=$(find ./build/libs -name "*-${{ env.COMMIT_HASH }}.jar" -print -quit)
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

      - name: Get short commit hash
        id: commit_hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: nightly-${{ github.sha }}
          release_name: "Nightly Build - ${{ github.sha }}"
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JAR to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/*-${{ env.COMMIT_HASH }}.jar
          asset_name: castiautils-${{ env.COMMIT_HASH }}.jar
          asset_content_type: application/java-archive